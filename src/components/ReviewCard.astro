---
interface Props {
  review: {
    user: string;
    rating: number;
    comment: string;
    date: string;
  };
}

const { review } = Astro.props;

const formatDate = (dateString: string) => {
  return new Date(dateString).toLocaleDateString('ru-RU', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
};

const renderStars = (rating: number) => {
  return Array.from({ length: 5 }, (_, i) => {
    const starClass = i < rating ? "text-yellow-400" : "text-gray-300 dark:text-gray-600";
    return `<span class="${starClass}">â˜…</span>`;
  }).join('');
};
---

<div class="bg-white dark:bg-gray-800 rounded-lg shadow p-6">
  <div class="flex items-center justify-between mb-4">
    <div class="flex items-center">
      <div class="h-10 w-10 rounded-full bg-primary-100 dark:bg-primary-900 flex items-center justify-center">
        <span class="text-primary-700 dark:text-primary-300 text-lg font-semibold">
          {review.user.charAt(0)}
        </span>
      </div>
      <div class="ml-3">
        <p class="text-sm font-medium text-gray-900 dark:text-white">{review.user}</p>
        <p class="text-sm text-gray-500 dark:text-gray-400">{formatDate(review.date)}</p>
      </div>
    </div>
    <div class="flex">
      <Fragment set:html={renderStars(review.rating)} />
    </div>
  </div>
  <p class="text-gray-700 dark:text-gray-300">{review.comment}</p>
</div>